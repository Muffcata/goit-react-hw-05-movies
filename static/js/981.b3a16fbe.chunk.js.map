{"version":3,"file":"static/js/981.b3a16fbe.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/Spinner/Spinner.jsx","components/services/fetchAPI.js","webpack://react-homework-template/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"items\":\"MoviesList_items__u7yPt\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport style from 'components/MoviesList/MoviesList.module.css';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {data.map(movie => (\n        <li className={style.list} key={movie.id}>\n          <Link\n            className={style.items}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default MoviesList;\n","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Spinner = () => (\n  <MagnifyingGlass\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"MagnifyingGlass-loading\"\n    wrapperStyle={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      margin: '0 auto',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      zIndex: '9999',\n    }}\n    wrapperClass=\"MagnifyingGlass-wrapper\"\n    glassColor=\"#c0efff\"\n    color=\"#e15b64\"\n  />\n);\n\nexport default Spinner;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '4644ef2dd871b6a3e3d5190dd084c262';\n\nconst fetchMoviesTrending = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n};\n\nconst fetchCastMovie = async id => {\n  const response = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchReviewsMovie = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n};\n\nconst fetchSearchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getReviewsMovie = { fetchReviewsMovie };\nexport const getTrendingMovie = { fetchMoviesTrending };\nexport const getMovieById = { fetchMovieById };\nexport const getCastMovie = { fetchCastMovie };\nexport const getSearchMovie = { fetchSearchMovies };\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchBox_input__+nuoc\",\"wrapper\":\"SearchBox_wrapper__bbbFW\",\"icon\":\"SearchBox_icon__bBoIc\"};","import React from 'react';\nimport style from 'components/SearchBox/SearchBox.module.css';\nimport PropTypes from 'prop-types';\n\nexport const SearchBox = ({ onSubmit }) => {\n  return (\n    <form className={style.wrapper} onSubmit={onSubmit}>\n      <input\n        className={style.input}\n        type=\"text\"\n        name=\"query\"\n        placeholder=\"Search here\"\n      />\n      <button className={style.icon} type=\"submit\"></button>\n    </form>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { getSearchMovie } from 'components/services/fetchAPI';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nexport const Movies = () => {\n  const [value, setValue] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getSearchedMovies = async () => {\n      try {\n        const fetchSearchMovies = await getSearchMovie.fetchSearchMovies(query);\n        setValue([...fetchSearchMovies]);\n        setIsLoading(false);\n      } catch (error) {\n        console.log('error');\n      }\n    };\n    getSearchedMovies(query);\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <SearchBox onSubmit={handleSubmit} />\n      {query && <MoviesList data={value} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","data","location","useLocation","map","movie","className","style","to","id","state","from","title","Spinner","visible","height","width","ariaLabel","wrapperStyle","display","justifyContent","alignItems","margin","position","top","left","right","bottom","zIndex","wrapperClass","glassColor","color","axios","API_KEY","fetchMoviesTrending","params","api_key","response","results","fetchMovieById","fetchCastMovie","fetchReviewsMovie","fetchSearchMovies","query","getReviewsMovie","getTrendingMovie","getMovieById","getCastMovie","getSearchMovie","SearchBox","onSubmit","type","name","placeholder","Movies","useState","value","setValue","useSearchParams","searchParams","setSearchParams","get","isLoading","setIsLoading","useEffect","getSearchedMovies","console","log","e","preventDefault","form","target","elements","reset"],"sourceRoot":""}