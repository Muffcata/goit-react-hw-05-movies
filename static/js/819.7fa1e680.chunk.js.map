{"version":3,"file":"static/js/819.7fa1e680.chunk.js","mappings":"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","sources":["components/Spinner/Spinner.jsx","components/services/fetchAPI.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/DetailsMovies/DetailsMovies.jsx"],"sourcesContent":["import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Spinner = () => (\n  <MagnifyingGlass\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"MagnifyingGlass-loading\"\n    wrapperStyle={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      margin: '0 auto',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      zIndex: '9999',\n    }}\n    wrapperClass=\"MagnifyingGlass-wrapper\"\n    glassColor=\"#c0efff\"\n    color=\"#e15b64\"\n  />\n);\n\nexport default Spinner;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '4644ef2dd871b6a3e3d5190dd084c262';\n\nconst fetchMoviesTrending = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n};\n\nconst fetchCastMovie = async id => {\n  const response = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchReviewsMovie = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n};\n\nconst fetchSearchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getReviewsMovie = { fetchReviewsMovie };\nexport const getTrendingMovie = { fetchMoviesTrending };\nexport const getMovieById = { fetchMovieById };\nexport const getCastMovie = { fetchCastMovie };\nexport const getSearchMovie = { fetchSearchMovies };\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"img\":\"MovieDetails_img__D3WH9\",\"title\":\"MovieDetails_title__RBndM\",\"description\":\"MovieDetails_description__n2kBz\",\"score\":\"MovieDetails_score__67zDg\",\"header\":\"MovieDetails_header__FB4jG\",\"genres\":\"MovieDetails_genres__80iSK\",\"link\":\"MovieDetails_link__wf74g\",\"btn\":\"MovieDetails_btn__tCU2l\",\"box\":\"MovieDetails_box__3lVdP\",\"card\":\"MovieDetails_card__KL1V6\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport style from 'components/MovieDetails/MovieDetails.module.css';\nimport DefaultPoster from 'images/default-movie-1-1-768x1129.jpg';\nimport PropTypes from 'prop-types';\n\nexport const MovieDetails = ({ movie }) => {\n  const {\n    title,\n    id,\n    overview,\n    vote_average,\n    genres,\n    poster_path,\n    original_title,\n  } = movie;\n\n  const userScore = `User Score: ${(vote_average * 10).toFixed(0)}%`;\n  const genresList = `${genres?.map(genre => genre.name).join(', ')}`;\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Link to={backLinkHref} className={style.btn}>\n        Go back\n      </Link>\n\n      <section className={style.container}>\n        <div className={style.card}>\n          <div className={style.wrapper}>\n            <img\n              className={style.img}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : DefaultPoster\n              }\n              alt={original_title}\n            />\n          </div>\n          <div className={style.box}>\n            <h1 className={style.title}>{title}</h1>\n            <p className={style.score}>{userScore}</p>\n            <div>\n              <h2 className={style.header}>Overview</h2>\n              <p className={style.description}>{overview}</p>\n            </div>\n            <div>\n              <h3 className={style.header}>Genres</h3>\n              <p className={style.genres}>{genresList}</p>\n            </div>\n            <div className={style.addBox}>\n              <h3 className={style.header}>Additional information</h3>\n              <Link\n                className={style.link}\n                to={`/movies/${id}/cast`}\n                state={{ from: location.from }}\n              >\n                Cast\n              </Link>\n              <Link\n                className={style.link}\n                to={`/movies/${id}/reviews`}\n                state={{ from: location.from }}\n              >\n                Reviews\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  vote_average: PropTypes.number,\n  genres: PropTypes.array,\n  poster_path: PropTypes.string,\n  original_title: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieById } from 'components/services/fetchAPI';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nexport const DetailsMovies = () => {\n  const [details, setDetails] = useState([]);\n  const queryParams = useParams();\n  const id = queryParams.movieId;\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const detailsMovie = async () => {\n      try {\n        const fetchedMovies = await getMovieById.fetchMovieById(id);\n        setDetails(fetchedMovies);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    detailsMovie(id);\n  }, [id]);\n\n  return (\n    <div>\n      {isLoading && <Spinner />}\n\n      <MovieDetails movie={details} />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default DetailsMovies;\n"],"names":["Spinner","visible","height","width","ariaLabel","wrapperStyle","display","justifyContent","alignItems","margin","position","top","left","right","bottom","zIndex","wrapperClass","glassColor","color","axios","API_KEY","fetchMoviesTrending","params","api_key","response","data","results","fetchMovieById","id","fetchCastMovie","fetchReviewsMovie","fetchSearchMovies","query","getReviewsMovie","getTrendingMovie","getMovieById","getCastMovie","getSearchMovie","MovieDetails","movie","title","overview","vote_average","genres","poster_path","original_title","userScore","toFixed","genresList","map","genre","name","join","location","useLocation","backLinkHref","state","from","to","className","style","src","DefaultPoster","alt","DetailsMovies","useState","details","setDetails","useParams","movieId","isLoading","setIsLoading","useEffect","detailsMovie","fetchedMovies","console","log"],"sourceRoot":""}