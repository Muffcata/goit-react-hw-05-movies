{"version":3,"file":"static/js/459.66272662.chunk.js","mappings":"4LAEaA,EAAU,kBACrB,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,0BACVC,aAAc,CACZC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZN,OAAQ,QACRO,OAAQ,SACRC,SAAU,QACVC,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,OAAQ,QAEVC,aAAa,0BACbC,WAAW,UACXC,MAAM,WArBa,C,+LCAvBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEVC,EAAmB,mCAAG,oGACHF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,QAASH,KAHa,cACpBI,EADoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,qDAUnBC,EAAc,mCAAG,WAAMC,GAAN,uFACET,EAAAA,EAAAA,IAAA,iBAAoBS,GAAM,CAC/CN,OAAQ,CACNC,QAASH,KAHQ,cACfI,EADe,yBAOdA,EAASC,MAPK,2CAAH,sDAUdI,EAAc,mCAAG,WAAMD,GAAN,uFACET,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAkC,CACvDN,OAAQ,CACNC,QAASH,KAHQ,cACfI,EADe,yBAMdA,EAASC,MANK,2CAAH,sDASdK,EAAiB,mCAAG,WAAMF,GAAN,uFACDT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAkC,CACvDN,OAAQ,CACNC,QAASH,KAHW,cAClBI,EADkB,yBAOjBA,EAASC,MAPQ,2CAAH,sDAUjBM,EAAiB,mCAAG,WAAMC,GAAN,uFACDb,EAAAA,EAAAA,IAAA,8BAAiCa,GAAS,CAC/DV,OAAQ,CACNC,QAASH,KAHW,cAClBI,EADkB,yBAMjBA,EAASC,KAAKC,SANG,2CAAH,sDASVO,EAAkB,CAAEH,kBAAAA,GACpBI,EAAmB,CAAEb,oBAAAA,GACrBc,EAAe,CAAER,eAAAA,GACjBS,EAAe,CAAEP,eAAAA,GACjBQ,EAAiB,CAAEN,kBAAAA,E,yKCzDhC,GAAgB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,UAAY,wBAAwB,MAAQ,qB,2BCM7HO,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMb,GADcc,EAAAA,EAAAA,MACGC,QACvB,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAS,mCAAG,6GAEkBX,EAAAA,GAAAA,eAA4BR,GAF9C,OAERoB,EAFQ,OAGdP,GAAQ,OAAIO,EAAkBR,OAC9BK,GAAa,GAJC,gDAMdI,QAAQC,IAAR,MANc,yDAAH,qDASfH,EAAUnB,EACX,GAAE,CAACA,KAGF,gCACGgB,IAAa,SAAC5C,EAAA,EAAD,KACd,eAAImD,UAAWC,EAAAA,MAAf,oBACA,eAAID,UAAWC,EAAAA,KAAf,SACGZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,UAAW1B,EAAd,EAAcA,GAAI2B,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,KAAhC,OACR,gBAAIL,UAAWC,EAAAA,KAAf,WACE,gBACED,UAAWC,EAAAA,IACXK,IACEF,EAAY,yCAC0BA,GAClCG,EAENC,IAAKH,KAEP,cAAGL,UAAWC,EAAAA,KAAd,SAA2BI,KAC3B,eAAGL,UAAWC,EAAAA,UAAd,wBAA2CE,OAXb1B,EADxB,QAkBjB,EAED,G","sources":["components/Spinner/Spinner.jsx","components/services/fetchAPI.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Spinner = () => (\n  <MagnifyingGlass\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"MagnifyingGlass-loading\"\n    wrapperStyle={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      margin: '0 auto',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      zIndex: '9999',\n    }}\n    wrapperClass=\"MagnifyingGlass-wrapper\"\n    glassColor=\"#c0efff\"\n    color=\"#e15b64\"\n  />\n);\n\nexport default Spinner;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '4644ef2dd871b6a3e3d5190dd084c262';\n\nconst fetchMoviesTrending = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nconst fetchMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n};\n\nconst fetchCastMovie = async id => {\n  const response = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nconst fetchReviewsMovie = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n};\n\nconst fetchSearchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const getReviewsMovie = { fetchReviewsMovie };\nexport const getTrendingMovie = { fetchMoviesTrending };\nexport const getMovieById = { fetchMovieById };\nexport const getCastMovie = { fetchCastMovie };\nexport const getSearchMovie = { fetchSearchMovies };\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"item\":\"Cast_item__vxHbm\",\"name\":\"Cast_name__y8nr9\",\"character\":\"Cast_character__esJL+\",\"title\":\"Cast_title__rq9b2\"};","import { getCastMovie } from 'components/services/fetchAPI';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport style from 'pages/Cast/Cast.module.css';\nimport { Spinner } from 'components/Spinner/Spinner';\nimport DefaultAvatar from 'images/generic-profile-avatar_352864.jpg';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const queryParams = useParams();\n  const id = queryParams.movieId;\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const castMovie = async () => {\n      try {\n        const fetchedCastMovies = await getCastMovie.fetchCastMovie(id);\n        setCast([...fetchedCastMovies.cast]);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    castMovie(id);\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Spinner />}\n      <h4 className={style.title}>Cast:</h4>\n      <ul className={style.list}>\n        {cast.map(({ character, id, profile_path, name }) => (\n          <li className={style.item} key={id}>\n            <img\n              className={style.img}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : DefaultAvatar\n              }\n              alt={name}\n            />\n            <p className={style.name}>{name}</p>\n            <p className={style.character}>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["Spinner","visible","height","width","ariaLabel","wrapperStyle","display","justifyContent","alignItems","margin","position","top","left","right","bottom","zIndex","wrapperClass","glassColor","color","axios","API_KEY","fetchMoviesTrending","params","api_key","response","data","results","fetchMovieById","id","fetchCastMovie","fetchReviewsMovie","fetchSearchMovies","query","getReviewsMovie","getTrendingMovie","getMovieById","getCastMovie","getSearchMovie","Cast","useState","cast","setCast","useParams","movieId","isLoading","setIsLoading","useEffect","castMovie","fetchedCastMovies","console","log","className","style","map","character","profile_path","name","src","DefaultAvatar","alt"],"sourceRoot":""}